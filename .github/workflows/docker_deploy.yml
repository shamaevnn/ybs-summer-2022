name: "docker_deploy"

on:
  push:
    branches:
      - master
  workflow_run:
    workflows: [ "checks" ]
    types: [ completed ]

env:
  TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
  REGISTRY: "ghcr.io/shamaevnn"
  IMAGE_NAME: "ybs-summer-2022"
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Open VPN
        run: |
          sudo apt-get install openvpn
          echo "${{ secrets.VPN_FILE }}" > .github/vpn/config.ovpn

      - name: Connect VPN
        uses: golfzaptw/action-connect-ovpn@master
        id: connect_vpn
        with:
          PING_URL: '127.0.0.1'
          FILE_OVPN: '.github/vpn/config.ovpn'
        env:
          CA_CRT: ${{ secrets.CA_CRT}}
          USER_CRT: ${{ secrets.USER_CRT }}
          USER_KEY: ${{ secrets.USER_KEY }}

      - name: Check Connect VPN
        run: echo "status of open vpn " ${{ steps.connect_vpn.outputs.STATUS }}

      - name: docker login
        run: |
          echo $TOKEN_GITHUB | docker login ghcr.io -u shamaevnn --password-stdin
      - name: docker build
        run: |
          docker build . -t ghcr.io/shamaevnn/ybs-summer-2022:latest
      - name: docker push
        run: |
          docker push ghcr.io/shamaevnn/ybs-summer-2022:latest
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,DATABASE_URL
          script: |
            sudo docker pull ghcr.io/shamaevnn/ybs-summer-2022:latest

            sudo docker ps -q --filter "name=$(echo $IMAGE_NAME)" | grep -q . && sudo docker stop $(echo $IMAGE_NAME) && sudo docker rm -fv $(echo $IMAGE_NAME)
            sudo docker run -d -p 80:80 -e DATABASE_URL=$(echo $DATABASE_URL) \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest

      - name: kill vpn
        if: always()
        run: sudo killall openvpn
